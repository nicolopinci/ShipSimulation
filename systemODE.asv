function dXdt = systemODE(t, X, invM, D, omega, control_signal, pid, bypassPID)
%systemODE Function to compute the result of the system that describes the
%dynamic of the system.
%   This function may be used in order to calculate the result of the
%   matrix calculations describing the dynamics of the system. In
%   particular, this may be used both in ode45, when no PID has been set (bypassPID = true) and in
%   Runge-Kutta, when a PID has been inserted (bypassPID = false).
%   t is the current time (from the beginning of the simulation)
%   X is the current status (at time t)
%   invM is the inverse of matrix M
%   D is the damping matrix
%   omega, expressed in Hz, is the shaft angular speed
%   control_signal is the input given to the system (the rudder angle)
%   pid is the signal tha

phi = X(3);

%delta = 30*sin(0.06*t);
%delta = 30;
if (bypassPID==false)
    delta = pid;
else
    delta = control_signal(t);
end
 

R = calculateR(phi);

F = get_force_torque(omega, delta);
F = F';

[A, B] = systemMatrix(R, invM, D, F);

[rA, cA] = size(A);
[rB, cB] = size(B);

if rA~=rB
    error("A and B should have the same number of rows");
end

dXdt = zeros(rA, 1);

for i=1:rA
    for j=1:cA
        dXdt(i) = dXdt(i) + A(i, j)*X(j);
    end
    for k=1:cB
        dXdt(i) = dXdt(i) + B(i, k);
    end
end